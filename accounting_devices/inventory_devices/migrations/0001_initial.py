# Generated by Django 5.1.5 on 2025-03-04 16:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название отдела')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('address', models.TextField(verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Отдел',
                'verbose_name_plural': 'Отделы',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supp_name', models.CharField(max_length=100, verbose_name='Имя поставщика')),
                ('supp_phone', models.CharField(max_length=25, verbose_name='Телефон поставщика')),
                ('supp_address', models.TextField(verbose_name='Адрес поставщика')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='ФИО')),
                ('email', models.CharField(max_length=100, verbose_name='Электронная почта')),
                ('phone', models.CharField(max_length=50, unique=True, verbose_name='Номер телефона')),
                ('post', models.CharField(max_length=50, verbose_name='Должность')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory_devices.department', verbose_name='Отдел')),
            ],
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dev_manufact', models.CharField(max_length=100, verbose_name='Производитель')),
                ('dev_model', models.CharField(max_length=100, verbose_name='Модель')),
                ('dev_type', models.CharField(choices=[('Мышь', 'Мышь'), ('Клавиатура', 'Клавиатура'), ('Монитор', 'Монитор'), ('Принтер', 'Принтер'), ('Другое', 'Другое')], max_length=45, verbose_name='Тип')),
                ('inv_num', models.CharField(max_length=50, unique=True, verbose_name='Инвентарный номер')),
                ('dev_number', models.CharField(max_length=50, unique=True, verbose_name='Серийный номер')),
                ('dev_buydate', models.DateField(verbose_name='Дата покупки')),
                ('dev_status', models.CharField(choices=[('На складе', 'На складе'), ('В эксплуатации', 'В эксплуатации'), ('В ремонте', 'В ремонте'), ('Списано', 'Списано')], max_length=45, verbose_name='Статус')),
                ('dev_supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory_devices.supplier', verbose_name='Поставщик')),
            ],
        ),
        migrations.CreateModel(
            name='Responsible',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_assigned', models.DateField(verbose_name='Дата выдачи')),
                ('date_returned', models.DateField(blank=True, null=True, verbose_name='Дата возврата')),
                ('status', models.CharField(max_length=100)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory_devices.devices', verbose_name='Устройство')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory_devices.employee', verbose_name='Сотрудник')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('device', 'date_assigned'), name='unique_device_assignment')],
                'unique_together': {('device', 'date_returned')},
            },
        ),
    ]
